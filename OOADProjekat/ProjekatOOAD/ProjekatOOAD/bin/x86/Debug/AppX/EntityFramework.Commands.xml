<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework.Commands</name>
    </assembly>
    <members>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.DuplicateMigrationName(System.Object)">
            <summary>
            The name '{migrationName}' is used by an existing migration.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Commands.Strings.MultipleContexts">
            <summary>
            More than one DbContext was found. Specify which one to use.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.MultipleContextsWithName(System.Object)">
            <summary>
            More than one DbContext named '{name}' was found. Specify which one to use by providing its fully qualified name.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.MultipleContextsWithQualifiedName(System.Object)">
            <summary>
            More than one DbContext named '{name}' was found. Specify which one to use by providing its fully qualified name using its exact case.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Commands.Strings.NoContext">
            <summary>
            No DbContext was found. Ensure that you're using the correct assembly and that the type is neither abstract nor generic.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.NoContextWithName(System.Object)">
            <summary>
            No DbContext named '{name}' was found.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.LogUseContext(System.Object)">
            <summary>
            Using context '{name}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Commands.Strings.ManuallyDeleted">
            <summary>
            A manual migration deletion was detected.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.NoMigrationFile(System.Object,System.Object)">
            <summary>
            No file named '{file}' was found. You must manually remove the migration class '{migrationClass}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.NoMigrationMetadataFile(System.Object)">
            <summary>
            No file named '{file}' was found.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Commands.Strings.NoSnapshot">
            <summary>
            No ModelSnapshot was found.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.NoSnapshotFile(System.Object,System.Object)">
            <summary>
            No file named '{file}' was found. You must manually remove the model snapshot class '{snapshotClass}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.RemovingMigration(System.Object)">
            <summary>
            Removing migration '{name}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Commands.Strings.RemovingSnapshot">
            <summary>
            Removing model snapshot.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Commands.Strings.RevertingSnapshot">
            <summary>
            Reverting model snapshot.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.UnapplyMigration(System.Object)">
            <summary>
            The migration '{name}' has already been applied to the database. Unapply it and try again. If the migration has been applied to other databases, consider reverting its changes using a new migration.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.UnknownOperation(System.Object)">
            <summary>
            The current CSharpMigrationOperationGenerator cannot scaffold operations of type '{operationType}'. Configure your services to use one that can.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.UnknownLiteral(System.Object)">
            <summary>
            The current CSharpHelper cannot scaffold literals of type '{literalType}'. Configure your services to use one that can.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.CannotFindRuntimeProviderAssembly(System.Object)">
            <summary>
            Unable to find provider assembly with name {assemblyName}. Ensure the specified name is correct and is referenced by the project.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Commands.Strings.DestructiveOperation">
            <summary>
            An operation was scaffolded that may result in the loss of data. Please review the migration for accuracy.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.ReusingDirectory(System.Object)">
            <summary>
            Reusing directory of file '{file}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.WritingMigration(System.Object)">
            <summary>
            Writing migration to '{file}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.WritingSnapshot(System.Object)">
            <summary>
            Writing model snapshot to '{file}'.
            </summary>
        </member>
        <member name="P:Microsoft.Data.Entity.Commands.Strings.Done">
            <summary>
            Done.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.ReusingNamespace(System.Object)">
            <summary>
            Reusing namespace of type '{type}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.ReusingSnapshotName(System.Object)">
            <summary>
            Reusing model snapshot name '{name}'.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.CannotFindDesignTimeProviderAssembly(System.Object)">
            <summary>
            Unable to find design-time provider assembly. Please install the {designTimeProviderAssemblyName} NuGet package and ensure that the package is referenced by the project.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.CannotFindDesignTimeProviderAssemblyAttribute(System.Object,System.Object)">
            <summary>
            Unable to find expected assembly attribute named {attributeName} in provider assembly {runtimeProviderAssemblyName}. This attribute is required to identify the class which acts as the design-time service provider factory.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Strings.DesignTimeAssemblyProviderDoesNotContainSpecifiedType(System.Object,System.Object)">
            <summary>
            Design-time provider assembly {assemblyName} does not contain the specified type {typeName}.
            </summary>
        </member>
        <member name="T:Microsoft.Data.Entity.Commands.Utilities.ForwardingProxy`1">
            <summary>
                This is a small piece of Remoting magic. It enables us to invoke methods on a
                remote object without knowing its actual type. The only restriction is that the
                names and shapes of the types and their members must be the same on each side of
                the boundary.
            </summary>
        </member>
        <member name="M:Microsoft.Data.Entity.Commands.Utilities.ForwardingProxy`1.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
            <summary>
                Intercepts method invocations on the object represented by the current instance
                and forwards them to the target to finish processing.
            </summary>
        </member>
    </members>
</doc>
